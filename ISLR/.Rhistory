log(0.99)
pnorm(-0.01005034, mean = 0.01, sd = 0.015)
pnorm(-0.01005034, mean = 0.001, sd = 0.015)
pnorm(-0.01005034, mean = 0.001, sd = 0.015*sqrt(5))
niter = 1e6
p0 = 1000
less = rep(0, niter)
for (i in 1:niter) {
p1 = log(p0) + sum(rnorm(5, mean = 0.001, sd = 0.015))
less[i] = as.numeric(exp(p1) < 990)
}
mean(less)
pnorm(-0.01005034, mean = 0.001, sd = 0.015*5)
pnorm(-0.01005034, mean = 0.001, sd = 0.015*sqrt(5))
niter = 1e5
p0 = 1000
less = rep(0, niter)
for (i in 1:niter) {
p1 = log(p0) + sum(rnorm(5, mean = 0.001, sd = 0.015))
less[i] = as.numeric(exp(p1) < 990)
}
mean(less)
pnorm(-0.01005034, mean = 0.001*5, sd = 0.015*sqrt(5)
)
install.packages("Ecdat")
library("Ecdat")
?CPSch3
data(CPSch3)
dimnames(CPSch3)[[2]]
male.earning = CPSch3[CPSch3[,3] == "male", 2]
sqrt.male.earnings = sqrt(male.earnings)
male.earnings = CPSch3[CPSch3[,3] == "male", 2]
sqrt.male.earnings = sqrt(male.earnings)
log.male.earnings = log(male.earnings)
par(mfrow = c(2,2))
qqnorm(male.earnings, datax = T, main = "untransformed")
qqnorm(sqrt.male.earnings, datax = T, main = "sqrt")
qqnorm(log.male.earnings, datax = T, main = "log")
par(mfrow = c(2, 2))
boxplot(male.earnings, main = "untransformed")
boxplot(sqrt.male.earnings, main = "sqrt")
boxplot(log.male.earnings, main = "log")
par(mfrow = c(2, 2))
plot(density(male.earnings), main = "untransformed")
plot(density(sqrt.male.earnings), main = "sqrt")
plot(density(log.male.earnings), main = "log")
library("MASS")
windows*()
windows()
boxcox(male.earning~1)
boxcox(male.earning~1)
boxcox(male.earning~1, lambda = seq(.3, .45, 1/100))
bc = boxcox(male.earning~1, lambda = seq(.3, .45, 1/100), interp = F)
ind = (bc$y == max(bc$y))
ind2 = (bc$y > max(bc$y) - qchisq(.95, df = 1)/2)
bc$x]ind]
bc$x[ind]
bc$x[ind2]
boxcox(male.earning~1, lambda = seq(.3, .45, 1/100), interp = F)
library("fGarch")
library("fGarch")
install.packages("fGarch")
library("fGarch")
fit = sstdFit(male.earnings, hessian = T)
fit
library(fEcofin)
install.packages("fEcofin")
install.packages("fEcofin", repos = "http://r-forge.r-project.org/")
install.packages("fEcofin", type="source")
install.packages("fEcofin", type="source")
library("Ecdat")
data(Tbrate, package = "Ecdat")
library(tseries)
library(tseries)
install.packages("tseries")
library(tseries)
plot(Tbrate)
acf(Tbrate)
?acf
acf(Tbrate)
acf.test(Tbrate[,1])
?adf.test
adf.test(Tbrate[,1])
adf.test(Tbrate[,2])
adf.test(Tbrate[,3])
x <- c(1,1,1,1,1)
y <- c(2,3)
x+y
x <- (1, 1, 1, 1, 1, 1)
x <- c(1, 1, 1, 1, 1, 1)
x+y
length(x)
length(y)
ls()
rm(x, y)
ls()
rm(list = ls())
?matrix
x = matrix(data = c(1,2,3,4), nrow=2, ncol=2)
x
x = matrix(data = c(1,2,3,4), nrow=2, ncol=2, byRow = TRUE)
x = matrix(data = c(1,2,3,4), nrow=2, ncol=2, byrow = TRUE)
x
sqrt(x)
x^2
x = rnorm(50)
y = x + rnorm(50, mean = 50, sd = .1)
x
y
x(1)
x[1]
x[0]
x[2]
x[-1]
x[-0]
x[0]
cor(x,y)
mean(x)
mean(y)
var(y)
sqrt(var(y))
sd(y)
plot(x,y)
x=rnorm(100)
y=rnorm(100
)
plot(x,y)
plot(x,y,xlab="x-axis",ylab="y-axis",main="Ebaka")
pdf("Ebaka.pdf")
plot(x,y,xlab="x-axis",ylab="y-axis",main="Ebaka",col="green")
dev.off()
seq(1,10)
?seq
seq(1,10,by=0.1)
seq(-pi,pi,length=100)
x = 1:10
y=x
?outer
f = outer(x, y, function(x,y) {cos(y)/(1+x^2)})
f
contour(x,y,f)
contour(x,y,f, nlevels=45,add=T)
?outer
fa=(f-t(f))/2
?t
contour(x,y,fa,nlevels=15)
image(x,y,fa)
image(x,y,fa)
perps(x,y,fa)
persp(x,y,fa)
persp(x,y,fa,theta=30)
persp(x,y,fa,theta=30,phi=20)
persp(x,y,fa,theta=30,phi=40)
A=matrix(1;16,4,4)
A=matrix(1:16,4,4)
A
A[2,3]
A[2:3,3]
t(A[2:3,3])
class(A[2,3])
class(A[2:3,3])
class(A[2:4,3])
A[2:4,3]
type
typeOf
class
?class
A[c(1,3),c(2,4)]
A[1:3,2:4]
A[1,]
dim(A)
?read.table
load
load(ISLR)
load.package(ISLR)
?import
??import
??load
??package
package.oad
package.oad
package.loa
package.load
packages
library(ISLR)
library("ISLR"")
)
""
library("ISLR")
library("ISLR")
package.install("ISLR")
install.packages("ISLR")
library(ISLR)
Auto
describe(Auto)
fix(Auto)
dim(Auto)
names(Auto)
attach(Auto)
plot(cylinders, mpg)
cylinders = as.factor(cylinders)
plot(cylinders, mpg)
plot(cylinders, mpg, col="red")
plot(cylinders, mpg, col="red", varwidth=T)
plot(cylinders, mpg, col="red", varwidth=T, horizontal=T)
hist(mpg)
hist(mpg, col=2)
hist(mpg, col=2,breaks=15)
pairs(Auto)
pairs(~mpg + dispacement + horsepower + weight + acceleration, Auto)
pairs(~mpg + displacement + horsepower + weight + acceleration, Auto)
pairs(~ mpg + displacement + horsepower + weight + acceleration, Auto)
plot(horsepower,mpg)
identify(horsepower,mpg,name)
identify(horsepower,mpg,name)
summary(Auto)
summary(mpg)
setwd("~/projects/r-playgroud/ISL")
college <- read.csv("data/College.csv")
college <- read.csv("data/College.csv")
colleger[1:10,]
college[1:10,]
rownames(college) <- college[,1]
college <- college(,-1])
college <- college[,-1]
college[1:10,]
summary(college)
pairs(college[,1:10])
plot(college$Outstate, college$Private)
attach(college)
plot(Private, Outstate)
Elite=rep("No",nrow(college))
Elite[college$Top10perc>50]="Yes"
Elite=as.factor[Elite]
Elite=as.factor(Elite)
college = data.frame(college, Elite)
college = data.frame(college, Elite)
summary(college)
college <- read.csv("data/College.csv")
rownames(college) <- college[,1]
college <- college[,-1]
Elite = rep("No",nrow(college))
Elite[college$Top10perc>50] = "Yes"
Elite = as.factor(Elite)
college = data.frame(college, Elite)
summary(college)
plot(college$Elite, college$Outstate)
par(mfrow=c(2,2))
hist(college$Outstate)
hist(college$Outstate, col=2, breaks=10)
hist(college$Outstate, col=2, breaks=15)
hist(college$Outstate, col=2, breaks=20)
hist(college$Outstate, col=2, breaks=25)
rage(Outstate)
range(Outstate)
range(college)
library(MASS)
Boston
?Boston
nrow(Boston)
ncol(Boston)
pairs(Boston)
